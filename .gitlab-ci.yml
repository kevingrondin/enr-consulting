stages:
  - build
  - deploy_prod

default:
  tags:
    - website

build:
  stage: build
  image: docker:latest
  script:
    - echo "$CI_JOB_TOKEN" | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE:$CI_PIPELINE_IID .
    - docker push $CI_REGISTRY_IMAGE:$CI_PIPELINE_IID
    - docker tag $CI_REGISTRY_IMAGE:$CI_PIPELINE_IID $CI_REGISTRY_IMAGE:latest
    - docker push $CI_REGISTRY_IMAGE:latest
  tags:
    - website

deploy_prod:
  stage: deploy_prod
  variables:
    DOMAIN_NAME: dsi.doc.austral-energie.com
    DEPLOY_PATH: "/opt/$CI_PROJECT_NAME/prod"
    AUTHELIA_DOMAIN: http://authelia:9091/api/verify?rd=https://authelia.austral-energie.com
  only:
    - main
  #when: manual
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan $DEPLOY_HOST >> ~/.ssh/known_hosts
    - export IMAGE_NAME=$CI_REGISTRY_IMAGE
    - export IMAGE_TAG=latest
  script:
    - ssh -o StrictHostKeyChecking=no $DEPLOY_USER@$DEPLOY_HOST "sudo mkdir -p $DEPLOY_PATH && sudo chown -R \$USER:\$USER $DEPLOY_PATH"
    - scp -o StrictHostKeyChecking=no ./docker-compose.yml $DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_PATH
    - ssh -o StrictHostKeyChecking=no $DEPLOY_USER@$DEPLOY_HOST "
        echo "$CI_REGISTRY_PAT" | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY &&
        cd $DEPLOY_PATH &&
        export CI_PROJECT_NAME=$(echo $CI_PROJECT_NAME | tr '[:upper:]' '[:lower:]') &&
        export COMPOSE_PROJECT_NAME=$CI_PROJECT_NAME &&
        export DC_IMAGE_NAME=$IMAGE_NAME &&
        export DC_IMAGE_TAG=$IMAGE_TAG &&
        export DOMAIN_NAME=$DOMAIN_NAME &&
        docker-compose down &&
        docker-compose pull &&
        docker-compose up -d --force-recreate"
